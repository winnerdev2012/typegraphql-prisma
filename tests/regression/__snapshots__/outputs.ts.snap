// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`outputs should properly generate aggregate classes for model with lowercase name: AggregateExample 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";
import GraphQLJSON from \\"graphql-type-json\\";
import { JsonValue, InputJsonValue } from \\"../../../../helpers/prisma-client-mock\\";
import { ExampleAvgAggregate } from \\"../outputs/ExampleAvgAggregate\\";
import { ExampleMaxAggregate } from \\"../outputs/ExampleMaxAggregate\\";
import { ExampleMinAggregate } from \\"../outputs/ExampleMinAggregate\\";
import { ExampleSumAggregate } from \\"../outputs/ExampleSumAggregate\\";

@TypeGraphQL.ObjectType({
  isAbstract: true,
  description: undefined,
  simpleResolvers: undefined,
})
export class AggregateExample {
  @TypeGraphQL.Field(_type => TypeGraphQL.Int, {
    nullable: false,
    description: undefined
  })
  count!: number;

  @TypeGraphQL.Field(_type => ExampleAvgAggregate, {
    nullable: true,
    description: undefined
  })
  avg!: ExampleAvgAggregate | null;

  @TypeGraphQL.Field(_type => ExampleSumAggregate, {
    nullable: true,
    description: undefined
  })
  sum!: ExampleSumAggregate | null;

  @TypeGraphQL.Field(_type => ExampleMinAggregate, {
    nullable: true,
    description: undefined
  })
  min!: ExampleMinAggregate | null;

  @TypeGraphQL.Field(_type => ExampleMaxAggregate, {
    nullable: true,
    description: undefined
  })
  max!: ExampleMaxAggregate | null;
}
"
`;

exports[`outputs should properly generate aggregate classes for model with lowercase name: ExampleAvgAggregate 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";
import GraphQLJSON from \\"graphql-type-json\\";
import { JsonValue, InputJsonValue } from \\"../../../../helpers/prisma-client-mock\\";

@TypeGraphQL.ObjectType({
  isAbstract: true,
  description: undefined,
  simpleResolvers: undefined,
})
export class ExampleAvgAggregate {
  @TypeGraphQL.Field(_type => TypeGraphQL.Float, {
    nullable: false,
    description: undefined
  })
  intIdField!: number;

  @TypeGraphQL.Field(_type => TypeGraphQL.Float, {
    nullable: false,
    description: undefined
  })
  floatField!: number;
}
"
`;

exports[`outputs should properly generate aggregate classes for model with lowercase name: ExampleMaxAggregate 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";
import GraphQLJSON from \\"graphql-type-json\\";
import { JsonValue, InputJsonValue } from \\"../../../../helpers/prisma-client-mock\\";

@TypeGraphQL.ObjectType({
  isAbstract: true,
  description: undefined,
  simpleResolvers: undefined,
})
export class ExampleMaxAggregate {
  @TypeGraphQL.Field(_type => TypeGraphQL.Int, {
    nullable: false,
    description: undefined
  })
  intIdField!: number;

  @TypeGraphQL.Field(_type => TypeGraphQL.Float, {
    nullable: false,
    description: undefined
  })
  floatField!: number;
}
"
`;

exports[`outputs should properly generate aggregate classes for model with lowercase name: ExampleMinAggregate 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";
import GraphQLJSON from \\"graphql-type-json\\";
import { JsonValue, InputJsonValue } from \\"../../../../helpers/prisma-client-mock\\";

@TypeGraphQL.ObjectType({
  isAbstract: true,
  description: undefined,
  simpleResolvers: undefined,
})
export class ExampleMinAggregate {
  @TypeGraphQL.Field(_type => TypeGraphQL.Int, {
    nullable: false,
    description: undefined
  })
  intIdField!: number;

  @TypeGraphQL.Field(_type => TypeGraphQL.Float, {
    nullable: false,
    description: undefined
  })
  floatField!: number;
}
"
`;

exports[`outputs should properly generate aggregate classes for model with lowercase name: ExampleSumAggregate 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";
import GraphQLJSON from \\"graphql-type-json\\";
import { JsonValue, InputJsonValue } from \\"../../../../helpers/prisma-client-mock\\";

@TypeGraphQL.ObjectType({
  isAbstract: true,
  description: undefined,
  simpleResolvers: undefined,
})
export class ExampleSumAggregate {
  @TypeGraphQL.Field(_type => TypeGraphQL.Int, {
    nullable: false,
    description: undefined
  })
  intIdField!: number;

  @TypeGraphQL.Field(_type => TypeGraphQL.Float, {
    nullable: false,
    description: undefined
  })
  floatField!: number;
}
"
`;

exports[`outputs should properly generate aggregate classes for model with lowercase name: outputs index 1`] = `
"export { AggregateExample } from \\"./AggregateExample\\";
export { BatchPayload } from \\"./BatchPayload\\";
export { ExampleAvgAggregate } from \\"./ExampleAvgAggregate\\";
export { ExampleMaxAggregate } from \\"./ExampleMaxAggregate\\";
export { ExampleMinAggregate } from \\"./ExampleMinAggregate\\";
export { ExampleSumAggregate } from \\"./ExampleSumAggregate\\";
"
`;

exports[`outputs should properly generate aggregate classes for renamed model: AggregateExample 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";
import GraphQLJSON from \\"graphql-type-json\\";
import { JsonValue, InputJsonValue } from \\"../../../../helpers/prisma-client-mock\\";
import { ExampleAvgAggregate } from \\"../outputs/ExampleAvgAggregate\\";
import { ExampleMaxAggregate } from \\"../outputs/ExampleMaxAggregate\\";
import { ExampleMinAggregate } from \\"../outputs/ExampleMinAggregate\\";
import { ExampleSumAggregate } from \\"../outputs/ExampleSumAggregate\\";

@TypeGraphQL.ObjectType({
  isAbstract: true,
  description: undefined,
  simpleResolvers: undefined,
})
export class AggregateExample {
  @TypeGraphQL.Field(_type => TypeGraphQL.Int, {
    nullable: false,
    description: undefined
  })
  count!: number;

  @TypeGraphQL.Field(_type => ExampleAvgAggregate, {
    nullable: true,
    description: undefined
  })
  avg!: ExampleAvgAggregate | null;

  @TypeGraphQL.Field(_type => ExampleSumAggregate, {
    nullable: true,
    description: undefined
  })
  sum!: ExampleSumAggregate | null;

  @TypeGraphQL.Field(_type => ExampleMinAggregate, {
    nullable: true,
    description: undefined
  })
  min!: ExampleMinAggregate | null;

  @TypeGraphQL.Field(_type => ExampleMaxAggregate, {
    nullable: true,
    description: undefined
  })
  max!: ExampleMaxAggregate | null;
}
"
`;

exports[`outputs should properly generate aggregate classes for renamed model: ExampleAvgAggregate 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";
import GraphQLJSON from \\"graphql-type-json\\";
import { JsonValue, InputJsonValue } from \\"../../../../helpers/prisma-client-mock\\";

@TypeGraphQL.ObjectType({
  isAbstract: true,
  description: undefined,
  simpleResolvers: undefined,
})
export class ExampleAvgAggregate {
  @TypeGraphQL.Field(_type => TypeGraphQL.Float, {
    nullable: false,
    description: undefined
  })
  intIdField!: number;

  @TypeGraphQL.Field(_type => TypeGraphQL.Float, {
    nullable: false,
    description: undefined
  })
  floatField!: number;
}
"
`;

exports[`outputs should properly generate aggregate classes for renamed model: ExampleMaxAggregate 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";
import GraphQLJSON from \\"graphql-type-json\\";
import { JsonValue, InputJsonValue } from \\"../../../../helpers/prisma-client-mock\\";

@TypeGraphQL.ObjectType({
  isAbstract: true,
  description: undefined,
  simpleResolvers: undefined,
})
export class ExampleMaxAggregate {
  @TypeGraphQL.Field(_type => TypeGraphQL.Int, {
    nullable: false,
    description: undefined
  })
  intIdField!: number;

  @TypeGraphQL.Field(_type => TypeGraphQL.Float, {
    nullable: false,
    description: undefined
  })
  floatField!: number;
}
"
`;

exports[`outputs should properly generate aggregate classes for renamed model: ExampleMinAggregate 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";
import GraphQLJSON from \\"graphql-type-json\\";
import { JsonValue, InputJsonValue } from \\"../../../../helpers/prisma-client-mock\\";

@TypeGraphQL.ObjectType({
  isAbstract: true,
  description: undefined,
  simpleResolvers: undefined,
})
export class ExampleMinAggregate {
  @TypeGraphQL.Field(_type => TypeGraphQL.Int, {
    nullable: false,
    description: undefined
  })
  intIdField!: number;

  @TypeGraphQL.Field(_type => TypeGraphQL.Float, {
    nullable: false,
    description: undefined
  })
  floatField!: number;
}
"
`;

exports[`outputs should properly generate aggregate classes for renamed model: ExampleSumAggregate 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";
import GraphQLJSON from \\"graphql-type-json\\";
import { JsonValue, InputJsonValue } from \\"../../../../helpers/prisma-client-mock\\";

@TypeGraphQL.ObjectType({
  isAbstract: true,
  description: undefined,
  simpleResolvers: undefined,
})
export class ExampleSumAggregate {
  @TypeGraphQL.Field(_type => TypeGraphQL.Int, {
    nullable: false,
    description: undefined
  })
  intIdField!: number;

  @TypeGraphQL.Field(_type => TypeGraphQL.Float, {
    nullable: false,
    description: undefined
  })
  floatField!: number;
}
"
`;

exports[`outputs should properly generate aggregate classes for renamed model: outputs index 1`] = `
"export { AggregateExample } from \\"./AggregateExample\\";
export { BatchPayload } from \\"./BatchPayload\\";
export { ExampleAvgAggregate } from \\"./ExampleAvgAggregate\\";
export { ExampleMaxAggregate } from \\"./ExampleMaxAggregate\\";
export { ExampleMinAggregate } from \\"./ExampleMinAggregate\\";
export { ExampleSumAggregate } from \\"./ExampleSumAggregate\\";
"
`;

exports[`outputs should properly generate output type classes when simpleResolvers option is enabled: AggregateSample 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";
import GraphQLJSON from \\"graphql-type-json\\";
import { JsonValue, InputJsonValue } from \\"../../../../helpers/prisma-client-mock\\";
import { SampleAvgAggregate } from \\"../outputs/SampleAvgAggregate\\";
import { SampleMaxAggregate } from \\"../outputs/SampleMaxAggregate\\";
import { SampleMinAggregate } from \\"../outputs/SampleMinAggregate\\";
import { SampleSumAggregate } from \\"../outputs/SampleSumAggregate\\";

@TypeGraphQL.ObjectType({
  isAbstract: true,
  description: undefined,
  simpleResolvers: true,
})
export class AggregateSample {
  @TypeGraphQL.Field(_type => TypeGraphQL.Int, {
    nullable: false,
    description: undefined
  })
  count!: number;

  @TypeGraphQL.Field(_type => SampleAvgAggregate, {
    nullable: true,
    description: undefined
  })
  avg!: SampleAvgAggregate | null;

  @TypeGraphQL.Field(_type => SampleSumAggregate, {
    nullable: true,
    description: undefined
  })
  sum!: SampleSumAggregate | null;

  @TypeGraphQL.Field(_type => SampleMinAggregate, {
    nullable: true,
    description: undefined
  })
  min!: SampleMinAggregate | null;

  @TypeGraphQL.Field(_type => SampleMaxAggregate, {
    nullable: true,
    description: undefined
  })
  max!: SampleMaxAggregate | null;
}
"
`;

exports[`outputs should properly generate output type classes when simpleResolvers option is enabled: BatchPayload 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";
import GraphQLJSON from \\"graphql-type-json\\";
import { JsonValue, InputJsonValue } from \\"../../../../helpers/prisma-client-mock\\";

@TypeGraphQL.ObjectType({
  isAbstract: true,
  description: undefined,
  simpleResolvers: true,
})
export class BatchPayload {
  @TypeGraphQL.Field(_type => TypeGraphQL.Int, {
    nullable: false,
    description: undefined
  })
  count!: number;
}
"
`;

exports[`outputs should properly generate output type classes when simpleResolvers option is enabled: SampleAvgAggregate 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";
import GraphQLJSON from \\"graphql-type-json\\";
import { JsonValue, InputJsonValue } from \\"../../../../helpers/prisma-client-mock\\";

@TypeGraphQL.ObjectType({
  isAbstract: true,
  description: undefined,
  simpleResolvers: true,
})
export class SampleAvgAggregate {
  @TypeGraphQL.Field(_type => TypeGraphQL.Float, {
    nullable: false,
    description: undefined
  })
  intIdField!: number;

  @TypeGraphQL.Field(_type => TypeGraphQL.Float, {
    nullable: false,
    description: undefined
  })
  floatField!: number;
}
"
`;

exports[`outputs should properly generate output type classes: AggregateSample 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";
import GraphQLJSON from \\"graphql-type-json\\";
import { JsonValue, InputJsonValue } from \\"../../../../helpers/prisma-client-mock\\";
import { SampleAvgAggregate } from \\"../outputs/SampleAvgAggregate\\";
import { SampleMaxAggregate } from \\"../outputs/SampleMaxAggregate\\";
import { SampleMinAggregate } from \\"../outputs/SampleMinAggregate\\";
import { SampleSumAggregate } from \\"../outputs/SampleSumAggregate\\";

@TypeGraphQL.ObjectType({
  isAbstract: true,
  description: undefined,
  simpleResolvers: undefined,
})
export class AggregateSample {
  @TypeGraphQL.Field(_type => TypeGraphQL.Int, {
    nullable: false,
    description: undefined
  })
  count!: number;

  @TypeGraphQL.Field(_type => SampleAvgAggregate, {
    nullable: true,
    description: undefined
  })
  avg!: SampleAvgAggregate | null;

  @TypeGraphQL.Field(_type => SampleSumAggregate, {
    nullable: true,
    description: undefined
  })
  sum!: SampleSumAggregate | null;

  @TypeGraphQL.Field(_type => SampleMinAggregate, {
    nullable: true,
    description: undefined
  })
  min!: SampleMinAggregate | null;

  @TypeGraphQL.Field(_type => SampleMaxAggregate, {
    nullable: true,
    description: undefined
  })
  max!: SampleMaxAggregate | null;
}
"
`;

exports[`outputs should properly generate output type classes: BatchPayload 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";
import GraphQLJSON from \\"graphql-type-json\\";
import { JsonValue, InputJsonValue } from \\"../../../../helpers/prisma-client-mock\\";

@TypeGraphQL.ObjectType({
  isAbstract: true,
  description: undefined,
  simpleResolvers: undefined,
})
export class BatchPayload {
  @TypeGraphQL.Field(_type => TypeGraphQL.Int, {
    nullable: false,
    description: undefined
  })
  count!: number;
}
"
`;

exports[`outputs should properly generate output type classes: SampleAvgAggregate 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";
import GraphQLJSON from \\"graphql-type-json\\";
import { JsonValue, InputJsonValue } from \\"../../../../helpers/prisma-client-mock\\";

@TypeGraphQL.ObjectType({
  isAbstract: true,
  description: undefined,
  simpleResolvers: undefined,
})
export class SampleAvgAggregate {
  @TypeGraphQL.Field(_type => TypeGraphQL.Float, {
    nullable: false,
    description: undefined
  })
  intIdField!: number;

  @TypeGraphQL.Field(_type => TypeGraphQL.Float, {
    nullable: false,
    description: undefined
  })
  floatField!: number;
}
"
`;

exports[`outputs should properly generate output type classes: SampleMaxAggregate 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";
import GraphQLJSON from \\"graphql-type-json\\";
import { JsonValue, InputJsonValue } from \\"../../../../helpers/prisma-client-mock\\";

@TypeGraphQL.ObjectType({
  isAbstract: true,
  description: undefined,
  simpleResolvers: undefined,
})
export class SampleMaxAggregate {
  @TypeGraphQL.Field(_type => TypeGraphQL.Int, {
    nullable: false,
    description: undefined
  })
  intIdField!: number;

  @TypeGraphQL.Field(_type => TypeGraphQL.Float, {
    nullable: false,
    description: undefined
  })
  floatField!: number;
}
"
`;

exports[`outputs should properly generate output type classes: SampleMinAggregate 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";
import GraphQLJSON from \\"graphql-type-json\\";
import { JsonValue, InputJsonValue } from \\"../../../../helpers/prisma-client-mock\\";

@TypeGraphQL.ObjectType({
  isAbstract: true,
  description: undefined,
  simpleResolvers: undefined,
})
export class SampleMinAggregate {
  @TypeGraphQL.Field(_type => TypeGraphQL.Int, {
    nullable: false,
    description: undefined
  })
  intIdField!: number;

  @TypeGraphQL.Field(_type => TypeGraphQL.Float, {
    nullable: false,
    description: undefined
  })
  floatField!: number;
}
"
`;

exports[`outputs should properly generate output type classes: SampleSumAggregate 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";
import GraphQLJSON from \\"graphql-type-json\\";
import { JsonValue, InputJsonValue } from \\"../../../../helpers/prisma-client-mock\\";

@TypeGraphQL.ObjectType({
  isAbstract: true,
  description: undefined,
  simpleResolvers: undefined,
})
export class SampleSumAggregate {
  @TypeGraphQL.Field(_type => TypeGraphQL.Int, {
    nullable: false,
    description: undefined
  })
  intIdField!: number;

  @TypeGraphQL.Field(_type => TypeGraphQL.Float, {
    nullable: false,
    description: undefined
  })
  floatField!: number;
}
"
`;

exports[`outputs should properly generate output type classes: outputs index 1`] = `
"export { AggregateSample } from \\"./AggregateSample\\";
export { BatchPayload } from \\"./BatchPayload\\";
export { SampleAvgAggregate } from \\"./SampleAvgAggregate\\";
export { SampleMaxAggregate } from \\"./SampleMaxAggregate\\";
export { SampleMinAggregate } from \\"./SampleMinAggregate\\";
export { SampleSumAggregate } from \\"./SampleSumAggregate\\";
"
`;
