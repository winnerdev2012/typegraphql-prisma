// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`enums should properly generate code for enum with docs 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";

/** Role enum doc */
export enum Role {
  USER = \\"USER\\",
  ADMIN = \\"ADMIN\\"
}
TypeGraphQL.registerEnumType(Role, {
  name: \\"Role\\",
  description: \\"Role enum doc\\",
});
"
`;

exports[`enums should properly generate code for enum with docs: enums index 1`] = `
"export { Role } from \\"./Role\\";
"
`;

exports[`enums should properly generate code for normal enum 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";

export enum Color {
  RED = \\"RED\\",
  GREEN = \\"GREEN\\",
  BLUE = \\"BLUE\\"
}
TypeGraphQL.registerEnumType(Color, {
  name: \\"Color\\",
  description: undefined,
});
"
`;

exports[`enums should properly generate model distinct enum when model field is renamed: SampleModelDistinctFieldEnum 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";

export enum SampleModelDistinctFieldEnum {
  intIdField = \\"intIdField\\",
  mappedFieldName = \\"stringField\\",
  intField = \\"intField\\"
}
TypeGraphQL.registerEnumType(SampleModelDistinctFieldEnum, {
  name: \\"SampleModelDistinctFieldEnum\\",
  description: undefined,
});
"
`;

exports[`enums should properly generate model distinct enum when model field is renamed: enums index 1`] = `
"export { SampleModelDistinctFieldEnum } from \\"./SampleModelDistinctFieldEnum\\";
export { SortOrder } from \\"./SortOrder\\";
"
`;

exports[`enums should properly generate model distinct enum when model is renamed: ExampleModelDistinctFieldEnum 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";

export enum ExampleModelDistinctFieldEnum {
  intIdField = \\"intIdField\\",
  stringField = \\"stringField\\",
  intField = \\"intField\\"
}
TypeGraphQL.registerEnumType(ExampleModelDistinctFieldEnum, {
  name: \\"ExampleModelDistinctFieldEnum\\",
  description: undefined,
});
"
`;

exports[`enums should properly generate model distinct enum when model is renamed: enums index 1`] = `
"export { ExampleModelDistinctFieldEnum } from \\"./ExampleModelDistinctFieldEnum\\";
export { SortOrder } from \\"./SortOrder\\";
"
`;

exports[`enums should properly generate model distinct field enum: SampleModelDistinctFieldEnum 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";

export enum SampleModelDistinctFieldEnum {
  intIdField = \\"intIdField\\",
  stringField = \\"stringField\\",
  intField = \\"intField\\"
}
TypeGraphQL.registerEnumType(SampleModelDistinctFieldEnum, {
  name: \\"SampleModelDistinctFieldEnum\\",
  description: undefined,
});
"
`;

exports[`enums should properly generate model distinct field enum: enums index 1`] = `
"export { SampleModelDistinctFieldEnum } from \\"./SampleModelDistinctFieldEnum\\";
export { SortOrder } from \\"./SortOrder\\";
"
`;

exports[`enums should properly generate sort order enum: SortOrder 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";

export enum SortOrder {
  asc = \\"asc\\",
  desc = \\"desc\\"
}
TypeGraphQL.registerEnumType(SortOrder, {
  name: \\"SortOrder\\",
  description: undefined,
});
"
`;

exports[`enums should properly generate sort order enum: enums index 1`] = `
"export { SampleModelDistinctFieldEnum } from \\"./SampleModelDistinctFieldEnum\\";
export { SortOrder } from \\"./SortOrder\\";
"
`;
