// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`enums should properly generate code for enum with docs 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";

/** Role enum doc */
export enum Role {
  USER = \\"USER\\",
  ADMIN = \\"ADMIN\\"
}
TypeGraphQL.registerEnumType(Role, {
  name: \\"Role\\",
  description: \\"Role enum doc\\",
});
"
`;

exports[`enums should properly generate code for enum with docs: enums index 1`] = `
"export { Role } from \\"./Role\\";
"
`;

exports[`enums should properly generate code for normal enum 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";

export enum Color {
  RED = \\"RED\\",
  GREEN = \\"GREEN\\",
  BLUE = \\"BLUE\\"
}
TypeGraphQL.registerEnumType(Color, {
  name: \\"Color\\",
  description: undefined,
});
"
`;

exports[`enums should properly generate model scalar enum when model field is renamed: SampleModelScalarFieldEnum 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";

export enum SampleModelScalarFieldEnum {
  intIdField = \\"intIdField\\",
  mappedFieldName = \\"stringField\\",
  intField = \\"intField\\"
}
TypeGraphQL.registerEnumType(SampleModelScalarFieldEnum, {
  name: \\"SampleModelScalarFieldEnum\\",
  description: undefined,
});
"
`;

exports[`enums should properly generate model scalar enum when model field is renamed: enums index 1`] = `
"export { QueryMode } from \\"./QueryMode\\";
export { SampleModelScalarFieldEnum } from \\"./SampleModelScalarFieldEnum\\";
export { SortOrder } from \\"./SortOrder\\";
"
`;

exports[`enums should properly generate model scalar enum when model is renamed: ExampleModelScalarFieldEnum 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";

export enum ExampleModelScalarFieldEnum {
  intIdField = \\"intIdField\\",
  stringField = \\"stringField\\",
  intField = \\"intField\\"
}
TypeGraphQL.registerEnumType(ExampleModelScalarFieldEnum, {
  name: \\"ExampleModelScalarFieldEnum\\",
  description: undefined,
});
"
`;

exports[`enums should properly generate model scalar enum when model is renamed: enums index 1`] = `
"export { ExampleModelScalarFieldEnum } from \\"./ExampleModelScalarFieldEnum\\";
export { QueryMode } from \\"./QueryMode\\";
export { SortOrder } from \\"./SortOrder\\";
"
`;

exports[`enums should properly generate model scalar field enum: SampleModelScalarFieldEnum 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";

export enum SampleModelScalarFieldEnum {
  intIdField = \\"intIdField\\",
  stringField = \\"stringField\\",
  intField = \\"intField\\"
}
TypeGraphQL.registerEnumType(SampleModelScalarFieldEnum, {
  name: \\"SampleModelScalarFieldEnum\\",
  description: undefined,
});
"
`;

exports[`enums should properly generate model scalar field enum: enums index 1`] = `
"export { QueryMode } from \\"./QueryMode\\";
export { SampleModelScalarFieldEnum } from \\"./SampleModelScalarFieldEnum\\";
export { SortOrder } from \\"./SortOrder\\";
"
`;

exports[`enums should properly generate standard prisma enums: QueryMode 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";

export enum QueryMode {
  \\"default\\" = \\"default\\",
  insensitive = \\"insensitive\\"
}
TypeGraphQL.registerEnumType(QueryMode, {
  name: \\"QueryMode\\",
  description: undefined,
});
"
`;

exports[`enums should properly generate standard prisma enums: SortOrder 1`] = `
"import * as TypeGraphQL from \\"type-graphql\\";

export enum SortOrder {
  asc = \\"asc\\",
  desc = \\"desc\\"
}
TypeGraphQL.registerEnumType(SortOrder, {
  name: \\"SortOrder\\",
  description: undefined,
});
"
`;

exports[`enums should properly generate standard prisma enums: enums index 1`] = `
"export { QueryMode } from \\"./QueryMode\\";
export { SampleModelScalarFieldEnum } from \\"./SampleModelScalarFieldEnum\\";
export { SortOrder } from \\"./SortOrder\\";
"
`;
